// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

package com.hypers.www.protocolbufferdemo;

public final class AddressBookProtos {
  private AddressBookProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PersonOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * Unique ID number for this person.
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * Unique ID number for this person.
     * </pre>
     */
    int getId();

    // optional string email = 3;
    /**
     * <code>optional string email = 3;</code>
     */
    boolean hasEmail();
    /**
     * <code>optional string email = 3;</code>
     */
    String getEmail();
    /**
     * <code>optional string email = 3;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    // repeated .Person.PhoneNumber phones = 4;
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    java.util.List<Person.PhoneNumber>
        getPhonesList();
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    Person.PhoneNumber getPhones(int index);
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    int getPhonesCount();
  }
  /**
   * Protobuf type {@code Person}
   *
   * <pre>
   * [START messages]
   * </pre>
   */
  public static final class Person extends
      com.google.protobuf.GeneratedMessageLite
      implements PersonOrBuilder {
    // Use Person.newBuilder() to construct.
    private Person(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Person(boolean noInit) {}

    private static final Person defaultInstance;
    public static Person getDefaultInstance() {
      return defaultInstance;
    }

    public Person getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Person(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              email_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                phones_ = new java.util.ArrayList<PhoneNumber>();
                mutable_bitField0_ |= 0x00000008;
              }
              phones_.add(input.readMessage(PhoneNumber.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          phones_ = java.util.Collections.unmodifiableList(phones_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Person> PARSER =
        new com.google.protobuf.AbstractParser<Person>() {
      public Person parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Person(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Person> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Person.PhoneType}
     */
    public enum PhoneType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>MOBILE = 0;</code>
       */
      MOBILE(0, 0),
      /**
       * <code>HOME = 1;</code>
       */
      HOME(1, 1),
      /**
       * <code>WORK = 2;</code>
       */
      WORK(2, 2),
      ;

      /**
       * <code>MOBILE = 0;</code>
       */
      public static final int MOBILE_VALUE = 0;
      /**
       * <code>HOME = 1;</code>
       */
      public static final int HOME_VALUE = 1;
      /**
       * <code>WORK = 2;</code>
       */
      public static final int WORK_VALUE = 2;


      public final int getNumber() { return value; }

      public static PhoneType valueOf(int value) {
        switch (value) {
          case 0: return MOBILE;
          case 1: return HOME;
          case 2: return WORK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PhoneType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PhoneType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PhoneType>() {
              public PhoneType findValueByNumber(int number) {
                return PhoneType.valueOf(number);
              }
            };

      private final int value;

      private PhoneType(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Person.PhoneType)
    }

    public interface PhoneNumberOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {

      // optional string number = 1;
      /**
       * <code>optional string number = 1;</code>
       */
      boolean hasNumber();
      /**
       * <code>optional string number = 1;</code>
       */
      String getNumber();
      /**
       * <code>optional string number = 1;</code>
       */
      com.google.protobuf.ByteString
          getNumberBytes();

      // optional .Person.PhoneType type = 2;
      /**
       * <code>optional .Person.PhoneType type = 2;</code>
       */
      boolean hasType();
      /**
       * <code>optional .Person.PhoneType type = 2;</code>
       */
      PhoneType getType();
    }
    /**
     * Protobuf type {@code Person.PhoneNumber}
     */
    public static final class PhoneNumber extends
        com.google.protobuf.GeneratedMessageLite
        implements PhoneNumberOrBuilder {
      // Use PhoneNumber.newBuilder() to construct.
      private PhoneNumber(com.google.protobuf.GeneratedMessageLite.Builder builder) {
        super(builder);

      }
      private PhoneNumber(boolean noInit) {}

      private static final PhoneNumber defaultInstance;
      public static PhoneNumber getDefaultInstance() {
        return defaultInstance;
      }

      public PhoneNumber getDefaultInstanceForType() {
        return defaultInstance;
      }

      private PhoneNumber(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                number_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                PhoneType value = PhoneType.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000002;
                  type_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static com.google.protobuf.Parser<PhoneNumber> PARSER =
          new com.google.protobuf.AbstractParser<PhoneNumber>() {
        public PhoneNumber parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PhoneNumber(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<PhoneNumber> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string number = 1;
      public static final int NUMBER_FIELD_NUMBER = 1;
      private Object number_;
      /**
       * <code>optional string number = 1;</code>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string number = 1;</code>
       */
      public String getNumber() {
        Object ref = number_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        Object ref = number_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .Person.PhoneType type = 2;
      public static final int TYPE_FIELD_NUMBER = 2;
      private PhoneType type_;
      /**
       * <code>optional .Person.PhoneType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Person.PhoneType type = 2;</code>
       */
      public PhoneType getType() {
        return type_;
      }

      private void initFields() {
        number_ = "";
        type_ = PhoneType.MOBILE;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNumberBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_.getNumber());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNumberBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static PhoneNumber parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static PhoneNumber parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static PhoneNumber parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static PhoneNumber parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static PhoneNumber parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static PhoneNumber parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static PhoneNumber parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static PhoneNumber parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static PhoneNumber parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static PhoneNumber parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(PhoneNumber prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      /**
       * Protobuf type {@code Person.PhoneNumber}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            PhoneNumber, Builder>
          implements PhoneNumberOrBuilder {
        // Construct using com.hypers.www.protocolbufferdemo.AddressBookProtos.Person.PhoneNumber.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          number_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = PhoneType.MOBILE;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public PhoneNumber getDefaultInstanceForType() {
          return PhoneNumber.getDefaultInstance();
        }

        public PhoneNumber build() {
          PhoneNumber result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public PhoneNumber buildPartial() {
          PhoneNumber result = new PhoneNumber(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.number_ = number_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          result.bitField0_ = to_bitField0_;
          return result;
        }

        public Builder mergeFrom(PhoneNumber other) {
          if (other == PhoneNumber.getDefaultInstance()) return this;
          if (other.hasNumber()) {
            bitField0_ |= 0x00000001;
            number_ = other.number_;
            
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          PhoneNumber parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (PhoneNumber) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string number = 1;
        private Object number_ = "";
        /**
         * <code>optional string number = 1;</code>
         */
        public boolean hasNumber() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string number = 1;</code>
         */
        public String getNumber() {
          Object ref = number_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            number_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string number = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNumberBytes() {
          Object ref = number_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            number_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string number = 1;</code>
         */
        public Builder setNumber(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          number_ = value;
          
          return this;
        }
        /**
         * <code>optional string number = 1;</code>
         */
        public Builder clearNumber() {
          bitField0_ = (bitField0_ & ~0x00000001);
          number_ = getDefaultInstance().getNumber();
          
          return this;
        }
        /**
         * <code>optional string number = 1;</code>
         */
        public Builder setNumberBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          number_ = value;
          
          return this;
        }

        // optional .Person.PhoneType type = 2;
        private PhoneType type_ = PhoneType.MOBILE;
        /**
         * <code>optional .Person.PhoneType type = 2;</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .Person.PhoneType type = 2;</code>
         */
        public PhoneType getType() {
          return type_;
        }
        /**
         * <code>optional .Person.PhoneType type = 2;</code>
         */
        public Builder setType(PhoneType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value;
          
          return this;
        }
        /**
         * <code>optional .Person.PhoneType type = 2;</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = PhoneType.MOBILE;
          
          return this;
        }

        // @@protoc_insertion_point(builder_scope:Person.PhoneNumber)
      }

      static {
        defaultInstance = new PhoneNumber(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Person.PhoneNumber)
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * Unique ID number for this person.
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * Unique ID number for this person.
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional string email = 3;
    public static final int EMAIL_FIELD_NUMBER = 3;
    private Object email_;
    /**
     * <code>optional string email = 3;</code>
     */
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string email = 3;</code>
     */
    public String getEmail() {
      Object ref = email_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          email_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string email = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      Object ref = email_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Person.PhoneNumber phones = 4;
    public static final int PHONES_FIELD_NUMBER = 4;
    private java.util.List<PhoneNumber> phones_;
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    public java.util.List<PhoneNumber> getPhonesList() {
      return phones_;
    }
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    public java.util.List<? extends PhoneNumberOrBuilder>
        getPhonesOrBuilderList() {
      return phones_;
    }
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    public int getPhonesCount() {
      return phones_.size();
    }
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    public PhoneNumber getPhones(int index) {
      return phones_.get(index);
    }
    /**
     * <code>repeated .Person.PhoneNumber phones = 4;</code>
     */
    public PhoneNumberOrBuilder getPhonesOrBuilder(
        int index) {
      return phones_.get(index);
    }

    private void initFields() {
      name_ = "";
      id_ = 0;
      email_ = "";
      phones_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEmailBytes());
      }
      for (int i = 0; i < phones_.size(); i++) {
        output.writeMessage(4, phones_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEmailBytes());
      }
      for (int i = 0; i < phones_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, phones_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Person parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Person parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Person parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Person parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Person parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Person parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Person parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Person parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Person parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Person parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Person prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Person}
     *
     * <pre>
     * [START messages]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Person, Builder>
        implements PersonOrBuilder {
      // Construct using com.hypers.www.protocolbufferdemo.AddressBookProtos.Person.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        email_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        phones_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public Person getDefaultInstanceForType() {
        return Person.getDefaultInstance();
      }

      public Person build() {
        Person result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Person buildPartial() {
        Person result = new Person(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.email_ = email_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          phones_ = java.util.Collections.unmodifiableList(phones_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.phones_ = phones_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(Person other) {
        if (other == Person.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEmail()) {
          bitField0_ |= 0x00000004;
          email_ = other.email_;
          
        }
        if (!other.phones_.isEmpty()) {
          if (phones_.isEmpty()) {
            phones_ = other.phones_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePhonesIsMutable();
            phones_.addAll(other.phones_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Person parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Person) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * Unique ID number for this person.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * Unique ID number for this person.
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * Unique ID number for this person.
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * Unique ID number for this person.
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        
        return this;
      }

      // optional string email = 3;
      private Object email_ = "";
      /**
       * <code>optional string email = 3;</code>
       */
      public boolean hasEmail() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string email = 3;</code>
       */
      public String getEmail() {
        Object ref = email_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string email = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string email = 3;</code>
       */
      public Builder setEmail(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        
        return this;
      }
      /**
       * <code>optional string email = 3;</code>
       */
      public Builder clearEmail() {
        bitField0_ = (bitField0_ & ~0x00000004);
        email_ = getDefaultInstance().getEmail();
        
        return this;
      }
      /**
       * <code>optional string email = 3;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        
        return this;
      }

      // repeated .Person.PhoneNumber phones = 4;
      private java.util.List<PhoneNumber> phones_ =
        java.util.Collections.emptyList();
      private void ensurePhonesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          phones_ = new java.util.ArrayList<PhoneNumber>(phones_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public java.util.List<PhoneNumber> getPhonesList() {
        return java.util.Collections.unmodifiableList(phones_);
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public int getPhonesCount() {
        return phones_.size();
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public PhoneNumber getPhones(int index) {
        return phones_.get(index);
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder setPhones(
          int index, PhoneNumber value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhonesIsMutable();
        phones_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder setPhones(
          int index, PhoneNumber.Builder builderForValue) {
        ensurePhonesIsMutable();
        phones_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder addPhones(PhoneNumber value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhonesIsMutable();
        phones_.add(value);

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder addPhones(
          int index, PhoneNumber value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhonesIsMutable();
        phones_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder addPhones(
          PhoneNumber.Builder builderForValue) {
        ensurePhonesIsMutable();
        phones_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder addPhones(
          int index, PhoneNumber.Builder builderForValue) {
        ensurePhonesIsMutable();
        phones_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder addAllPhones(
          Iterable<? extends PhoneNumber> values) {
        ensurePhonesIsMutable();
        super.addAll(values, phones_);

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder clearPhones() {
        phones_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phones = 4;</code>
       */
      public Builder removePhones(int index) {
        ensurePhonesIsMutable();
        phones_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:Person)
    }

    static {
      defaultInstance = new Person(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Person)
  }

  public interface AddressBookOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .Person people = 1;
    /**
     * <code>repeated .Person people = 1;</code>
     */
    java.util.List<Person>
        getPeopleList();
    /**
     * <code>repeated .Person people = 1;</code>
     */
    Person getPeople(int index);
    /**
     * <code>repeated .Person people = 1;</code>
     */
    int getPeopleCount();
  }
  /**
   * Protobuf type {@code AddressBook}
   *
   * <pre>
   * Our address book file is just one of these.
   * </pre>
   */
  public static final class AddressBook extends
      com.google.protobuf.GeneratedMessageLite
      implements AddressBookOrBuilder {
    // Use AddressBook.newBuilder() to construct.
    private AddressBook(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AddressBook(boolean noInit) {}

    private static final AddressBook defaultInstance;
    public static AddressBook getDefaultInstance() {
      return defaultInstance;
    }

    public AddressBook getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AddressBook(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                people_ = new java.util.ArrayList<Person>();
                mutable_bitField0_ |= 0x00000001;
              }
              people_.add(input.readMessage(Person.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          people_ = java.util.Collections.unmodifiableList(people_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AddressBook> PARSER =
        new com.google.protobuf.AbstractParser<AddressBook>() {
      public AddressBook parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddressBook(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<AddressBook> getParserForType() {
      return PARSER;
    }

    // repeated .Person people = 1;
    public static final int PEOPLE_FIELD_NUMBER = 1;
    private java.util.List<Person> people_;
    /**
     * <code>repeated .Person people = 1;</code>
     */
    public java.util.List<Person> getPeopleList() {
      return people_;
    }
    /**
     * <code>repeated .Person people = 1;</code>
     */
    public java.util.List<? extends PersonOrBuilder>
        getPeopleOrBuilderList() {
      return people_;
    }
    /**
     * <code>repeated .Person people = 1;</code>
     */
    public int getPeopleCount() {
      return people_.size();
    }
    /**
     * <code>repeated .Person people = 1;</code>
     */
    public Person getPeople(int index) {
      return people_.get(index);
    }
    /**
     * <code>repeated .Person people = 1;</code>
     */
    public PersonOrBuilder getPeopleOrBuilder(
        int index) {
      return people_.get(index);
    }

    private void initFields() {
      people_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < people_.size(); i++) {
        output.writeMessage(1, people_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < people_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, people_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static AddressBook parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AddressBook parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AddressBook parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AddressBook parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AddressBook parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AddressBook parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static AddressBook parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static AddressBook parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static AddressBook parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AddressBook parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AddressBook prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code AddressBook}
     *
     * <pre>
     * Our address book file is just one of these.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          AddressBook, Builder>
        implements AddressBookOrBuilder {
      // Construct using com.hypers.www.protocolbufferdemo.AddressBookProtos.AddressBook.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        people_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public AddressBook getDefaultInstanceForType() {
        return AddressBook.getDefaultInstance();
      }

      public AddressBook build() {
        AddressBook result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AddressBook buildPartial() {
        AddressBook result = new AddressBook(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          people_ = java.util.Collections.unmodifiableList(people_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.people_ = people_;
        return result;
      }

      public Builder mergeFrom(AddressBook other) {
        if (other == AddressBook.getDefaultInstance()) return this;
        if (!other.people_.isEmpty()) {
          if (people_.isEmpty()) {
            people_ = other.people_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePeopleIsMutable();
            people_.addAll(other.people_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AddressBook parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AddressBook) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Person people = 1;
      private java.util.List<Person> people_ =
        java.util.Collections.emptyList();
      private void ensurePeopleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          people_ = new java.util.ArrayList<Person>(people_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .Person people = 1;</code>
       */
      public java.util.List<Person> getPeopleList() {
        return java.util.Collections.unmodifiableList(people_);
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public int getPeopleCount() {
        return people_.size();
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Person getPeople(int index) {
        return people_.get(index);
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder setPeople(
          int index, Person value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeopleIsMutable();
        people_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder setPeople(
          int index, Person.Builder builderForValue) {
        ensurePeopleIsMutable();
        people_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder addPeople(Person value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeopleIsMutable();
        people_.add(value);

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder addPeople(
          int index, Person value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeopleIsMutable();
        people_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder addPeople(
          Person.Builder builderForValue) {
        ensurePeopleIsMutable();
        people_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder addPeople(
          int index, Person.Builder builderForValue) {
        ensurePeopleIsMutable();
        people_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder addAllPeople(
          Iterable<? extends Person> values) {
        ensurePeopleIsMutable();
        super.addAll(values, people_);

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder clearPeople() {
        people_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .Person people = 1;</code>
       */
      public Builder removePeople(int index) {
        ensurePeopleIsMutable();
        people_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:AddressBook)
    }

    static {
      defaultInstance = new AddressBook(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AddressBook)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
